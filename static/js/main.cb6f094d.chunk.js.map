{"version":3,"sources":["Components/topbar/Topbar.jsx","Context/Context.jsx","pages/WorkPlace/ColorSelectorNode.jsx","pages/Nodes/ColorNode/ColorNode.jsx","pages/WorkPlace/WorkPlace.jsx","pages/Nodes/ImageNode/ImageNode.jsx","pages/Nodes/TextNode/TextNode.jsx","pages/Nodes/Output/Output.jsx","pages/CardSetter/CardSetter.jsx","App.js","index.js"],"names":["topbar","className","CardContext","createContext","memo","data","isConnectable","type","position","style","background","onConnect","params","console","log","color","onChange","defaultValue","id","top","bottom","initBgColor","snapGrid","nodeTypes","selectorNode","ColorSelectorNode","ImageNode","useContext","file","setFile","React","useState","result","setResult","uploader","e","imageFile","target","files","reader","FileReader","addEventListener","readAsDataURL","useDisplayImage","ref","src","alt","height","width","ColorNode","TextNode","text","setText","name","max","value","OutputNode","backgroundColor","onClick","label","WorkPlace","setBackgroundColor","setColor","reactflowInstance","setReactflowInstance","elements","setElements","setBgColor","useEffect","initialState","border","padding","x","y","event","els","map","isEdge","source","animated","length","fitView","useCallback","elementsToRemove","removeElements","addEdge","stroke","onLoad","rfi","snapToGrid","defaultZoom","CardSetter","hexCheckerHex","RegExp","cardDescText","setCardDescText","containerStyle","setcontainerStyle","display","imageModelStyle","setImageModelStyle","solidModelStyle","setSolidModelStyle","zIndex","modelContainerStyle","setModelContainerStyle","fileName","setFileName","clickHandler","newContainerStyle","newModelStyle","newSolidModelStyle","newImageModelStyle","ChangeHandler","test","submitHandler","closeModel","onMouseEnter","onMouseLeave","accept","Name","for","to","htmlFor","min","placeholder","App","providerValue","useMemo","Provider","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb6f094d.chunk.js","sourcesContent":["import \"./Topbar.scss\";\r\n\r\nfunction topbar() {\r\n  return (\r\n    <div className=\"top\">\r\n      <div className=\"topLeft\">Card-Design </div>\r\n      <div className=\"topCenter\">\r\n        <nav className=\"Navigation\"></nav>\r\n      </div>\r\n      <div className=\"topRight\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default topbar;\r\n","import { createContext } from \"react\";\r\n\r\nexport const CardContext = createContext(null);\r\n","import React, { memo } from \"react\";\r\n\r\nimport { Handle } from \"react-flow-renderer\";\r\n\r\nexport default memo(({ data, isConnectable }) => {\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"left\"\r\n        style={{ background: \"#555\" }}\r\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\r\n        isConnectable={isConnectable}\r\n      />\r\n      <div>\r\n        Custom Color Picker Node: <strong>{data.color}</strong>\r\n      </div>\r\n      <input\r\n        className=\"nodrag\"\r\n        type=\"color\"\r\n        onChange={data.onChange}\r\n        defaultValue={data.color}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"a\"\r\n        style={{ top: 10, background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        id=\"b\"\r\n        style={{ bottom: 10, top: \"auto\", background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import React, { memo } from \"react\";\r\n\r\nimport { Handle } from \"react-flow-renderer\";\r\n\r\nexport default memo(({ data, isConnectable }) => {\r\n  return (\r\n    <>\r\n      {console.log(data.color)}\r\n      <div>\r\n        Custom Color Picker Node: <strong>{data.color}</strong>\r\n      </div>\r\n      <input\r\n        className=\"nodrag\"\r\n        type=\"color\"\r\n        onChange={data.onChange}\r\n        defaultValue={data.color}\r\n      />\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        style={{ bottom: 10, top: \"auto\", background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import \"./WorkPlace.scss\";\r\nimport { CardContext } from \"../../Context/Context\";\r\nimport ColorSelectorNode from \"./ColorSelectorNode\";\r\nimport ColorNode from \"../Nodes/ColorNode/ColorNode\";\r\nimport ImageNode from \"../Nodes/ImageNode/ImageNode\";\r\nimport TextNode from \"../Nodes/TextNode/TextNode\";\r\nimport OutputNode from \"../Nodes/Output/Output\";\r\nimport { useState, useContext, useCallback, useEffect } from \"react\";\r\nimport ReactFlow, {\r\n  isEdge,\r\n  removeElements,\r\n  addEdge,\r\n  MiniMap,\r\n  Controls,\r\n} from \"react-flow-renderer\";\r\n\r\nconst onNodeDragStop = (event, node) => console.log(\"drag stop\", node);\r\nconst onElementClick = (event, element) => console.log(\"click\", element);\r\n\r\nconst initBgColor = \"#1A192B\";\r\n\r\nconst connectionLineStyle = { stroke: \"#fff\" };\r\nconst snapGrid = [20, 20];\r\nconst nodeTypes = {\r\n  selectorNode: ColorSelectorNode,\r\n  ImageNode,\r\n  ColorNode,\r\n  TextNode,\r\n  OutputNode,\r\n};\r\n\r\nfunction WorkPlace() {\r\n  const {\r\n    file,\r\n    setFile,\r\n    backgroundColor,\r\n    setBackgroundColor,\r\n    color,\r\n    setColor,\r\n  } = useContext(CardContext);\r\n  const [reactflowInstance, setReactflowInstance] = useState(null);\r\n  const [elements, setElements] = useState([]);\r\n  const [bgColor, setBgColor] = useState(initBgColor);\r\n\r\n  useEffect(() => {\r\n    const onChange = (event) => {\r\n      setElements((els) =>\r\n        els.map((e) => {\r\n          if (isEdge(e) || e.id !== \"2\") {\r\n            return e;\r\n          }\r\n\r\n          const color = event.target.value;\r\n\r\n          setBgColor(color);\r\n\r\n          return {\r\n            ...e,\r\n            data: {\r\n              ...e.data,\r\n              color,\r\n            },\r\n          };\r\n        })\r\n      );\r\n    };\r\n\r\n    const initialState = [\r\n      {\r\n        id: \"I1\",\r\n        type: \"ImageNode\",\r\n        data: { label: \"Input Image\", color: initBgColor },\r\n        style: { border: \"1px solid #777\", padding: 10 },\r\n        position: { x: 100, y: 50 },\r\n      },\r\n      {\r\n        id: \"T1\",\r\n        type: \"TextNode\",\r\n        data: { label: \"Input text\", color: initBgColor },\r\n        style: { border: \"1px solid green\", padding: 10 },\r\n        position: { x: 100, y: 150 },\r\n      },\r\n      {\r\n        id: \"C1\",\r\n        type: \"ColorNode\",\r\n        data: { label: \"Input text\", onChange, color: initBgColor },\r\n        style: { border: \"1px solid red\", padding: 10 },\r\n        position: { x: 100, y: 250 },\r\n      },\r\n      {\r\n        id: \"O1\",\r\n        type: \"OutputNode\",\r\n        data: { label: \"Card Generation\", color: initBgColor },\r\n        style: { border: \"1px solid red\", padding: 10 },\r\n        position: { x: 425, y: 150 },\r\n      },\r\n      {\r\n        id: \"I1-O1\",\r\n        source: \"I1\",\r\n        target: \"O1\",\r\n        animated: true,\r\n      },\r\n      {\r\n        id: \"T1-O1\",\r\n        source: \"T1\",\r\n        target: \"O1\",\r\n        animated: true,\r\n      },\r\n      {\r\n        id: \"C1-O1\",\r\n        source: \"C1\",\r\n        target: \"O1\",\r\n        animated: true,\r\n      },\r\n    ];\r\n\r\n    setElements(initialState);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (reactflowInstance && elements.length > 0) {\r\n      reactflowInstance.fitView();\r\n    }\r\n  }, [reactflowInstance, elements.length]);\r\n\r\n  const onElementsRemove = useCallback(\r\n    (elementsToRemove) =>\r\n      setElements((els) => removeElements(elementsToRemove, els)),\r\n    []\r\n  );\r\n  const onConnect = useCallback(\r\n    (params) =>\r\n      setElements((els) =>\r\n        addEdge({ ...params, animated: true, style: { stroke: \"#fff\" } }, els)\r\n      ),\r\n    []\r\n  );\r\n\r\n  const onLoad = useCallback(\r\n    (rfi) => {\r\n      if (!reactflowInstance) {\r\n        setReactflowInstance(rfi);\r\n        console.log(\"flow loaded:\", rfi);\r\n      }\r\n    },\r\n    [reactflowInstance]\r\n  );\r\n\r\n  return (\r\n    <div className=\"workPlace\">\r\n      <div className=\"leftPanel\">\r\n        <div className=\"upper\">\r\n          <div className=\"selectorDiv\">\r\n            <span>Image Field</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"middle\">\r\n          <div className=\"selectorDiv\">\r\n            <span>Text Field</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"lower\">\r\n          <div className=\"selectorDiv\">\r\n            <span>Card Generator</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"rightPanel\">\r\n        <ReactFlow\r\n          elements={elements}\r\n          // onElementClick={onElementClick}\r\n          // onElementsRemove={onElementsRemove}\r\n          // onConnect={onConnect}\r\n          // onNodeDragStop={onNodeDragStop}\r\n          // style={{ background: bgColor }}\r\n          onLoad={onLoad}\r\n          nodeTypes={nodeTypes}\r\n          snapToGrid={true}\r\n          snapGrid={snapGrid}\r\n          defaultZoom={2.5}\r\n        >\r\n          <Controls />\r\n        </ReactFlow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WorkPlace;\r\n","import React, { memo, useContext, useState } from \"react\";\r\nimport \"./ImageNode.scss\";\r\nimport { CardContext } from \"../../../Context/Context\";\r\n\r\nimport { Handle } from \"react-flow-renderer\";\r\n\r\nexport default memo(({ data, isConnectable }) => {\r\n  const { file, setFile } = useContext(CardContext);\r\n\r\n  function useDisplayImage() {\r\n    const [result, setResult] = React.useState(\"\");\r\n\r\n    function uploader(e) {\r\n      const imageFile = e.target.files[0];\r\n\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", (e) => {\r\n        setResult(e.target.result);\r\n      });\r\n\r\n      reader.readAsDataURL(imageFile);\r\n    }\r\n\r\n    return { result, uploader };\r\n  }\r\n\r\n  const { result, uploader } = useDisplayImage();\r\n  return (\r\n    <>\r\n      {console.log(data)}\r\n      <div className=\"container\">\r\n        <div className=\"imageNode\"></div>\r\n        <div className=\"fileViewer\">\r\n          {result && (\r\n            <img\r\n              ref={file}\r\n              src={result}\r\n              alt=\"\"\r\n              style={{ height: \"100px\", width: \"100px\" }}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"inputFile\">\r\n          <span>\r\n            <input\r\n              type=\"file\"\r\n              onChange={(e) => {\r\n                setFile(e.target.files[0]);\r\n                uploader(e);\r\n              }}\r\n            />\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        style={{ background: \"#555\" }}\r\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\n// {\r\n//       <Handle\r\n//         type=\"target\"\r\n//         position=\"left\"\r\n//         style={{ background: \"#555\" }}\r\n//         onConnect={(params) => console.log(\"handle onConnect\", params)}\r\n//         isConnectable={isConnectable}\r\n//       />\r\n//       <div>\r\n//         Custom Color Picker Node: <strong>{data.color}</strong>\r\n//       </div>\r\n//       <input\r\n//         className=\"nodrag\"\r\n//         type=\"color\"\r\n//         onChange={data.onChange}\r\n//         defaultValue={data.color}\r\n//       />\r\n//       <Handle\r\n//         type=\"source\"\r\n//         position=\"right\"\r\n//         id=\"a\"\r\n//         style={{ top: 10, background: \"#555\" }}\r\n//         isConnectable={isConnectable}\r\n//       />\r\n//       <Handle\r\n//         type=\"source\"\r\n//         position=\"right\"\r\n//         id=\"b\"\r\n//         style={{ bottom: 10, top: \"auto\", background: \"#555\" }}\r\n//         isConnectable={isConnectable}\r\n//       />\r\n// }\r\n","import React, { memo, useState, useContext } from \"react\";\r\nimport { CardContext } from \"../../../Context/Context\";\r\n\r\nimport { Handle } from \"react-flow-renderer\";\r\n\r\nexport default memo(({ data, isConnectable }) => {\r\n  const { text, setText } = useContext(CardContext);\r\n\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"right\"\r\n        style={{ background: \"#555\" }}\r\n        onConnect={(params) => console.log(\"handle onConnect\", params)}\r\n        isConnectable={isConnectable}\r\n      />\r\n      <div className=\"container\">\r\n        <div className=\"textInput\">{text}</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"\"\r\n          id=\"\"\r\n          max=\"200\"\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n","import React, { memo, useContext } from \"react\";\r\n\r\nimport { Handle } from \"react-flow-renderer\";\r\nimport { CardContext } from \"../../../Context/Context\";\r\n\r\nexport default memo(({ data, isConnectable }) => {\r\n  const { file, text, backgroundColor, color } = useContext(CardContext);\r\n  const clickHandler = (e) => {\r\n    console.log(e);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"containter\" onClick={clickHandler}>\r\n        {data.label}\r\n      </div>\r\n\r\n      <Handle\r\n        type=\"target\"\r\n        position=\"left\"\r\n        id=\"a\"\r\n        style={{ top: 10, background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import \"./CardSetter.scss\";\r\nimport { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CardContext } from \"../../Context/Context\";\r\n\r\nexport default function CardSetter() {\r\n  // [Text Line]\r\n  const solidTextLine = \"Generate a card with Solid Background...\";\r\n  const imageInputTextLine = \"Generate a card with Image as Background...\";\r\n\r\n  // [Hex Validatation]\r\n  const hexCheckerHex = new RegExp(\"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$\");\r\n\r\n  //[Styles]\r\n  const [cardDescText, setCardDescText] = useState(\"\");\r\n  const [containerStyle, setcontainerStyle] = useState({\r\n    backgroundColor: \"lightgreen\",\r\n  });\r\n  const [imageModelStyle, setImageModelStyle] = useState({ display: \"none\" });\r\n  const [solidModelStyle, setSolidModelStyle] = useState({ display: \"none\" });\r\n  const [modelContainerStyle, setModelContainerStyle] = useState({\r\n    zIndex: \"10\",\r\n    display: \"none\",\r\n  });\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  const {\r\n    file,\r\n    setFile,\r\n    backgroundColor,\r\n    setBackgroundColor,\r\n    color,\r\n    setColor,\r\n  } = useContext(CardContext);\r\n\r\n  // [Funtions]\r\n  const clickHandler = (e) => {\r\n    const name = e.target.className;\r\n    console.log(name);\r\n    const newContainerStyle = { ...containerStyle, display: \"none\" };\r\n    setcontainerStyle(newContainerStyle);\r\n\r\n    const newModelStyle = { ...modelContainerStyle, display: \"block\" };\r\n    setModelContainerStyle(newModelStyle);\r\n\r\n    if (name === \"solidColor\") {\r\n      const newSolidModelStyle = { ...solidModelStyle, display: \"block\" };\r\n      setSolidModelStyle(newSolidModelStyle);\r\n    } else if (name === \"imageInput\") {\r\n      const newImageModelStyle = {\r\n        ...imageModelStyle,\r\n        display: \"block\",\r\n      };\r\n      setImageModelStyle(newImageModelStyle);\r\n    }\r\n  };\r\n\r\n  const ChangeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = \"#\" + e.target.value;\r\n    const isValid = hexCheckerHex.test(value);\r\n    if (isValid) {\r\n      if (name === \"backgroundColorValueInput\") {\r\n        setBackgroundColor(value);\r\n      } else if (name === \"textColorValueInput\") setColor(value);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    console.log(e.target);\r\n  };\r\n\r\n  const closeModel = (e) => {\r\n    const name = e.target;\r\n    console.log(name);\r\n    const newContainerStyle = { ...containerStyle, display: \"block\" };\r\n    setcontainerStyle(newContainerStyle);\r\n    const newModelStyle = { ...modelContainerStyle, display: \"none\" };\r\n    setModelContainerStyle(newModelStyle);\r\n    const newSolidModelStyle = { ...solidModelStyle, display: \"none\" };\r\n    setSolidModelStyle(newSolidModelStyle);\r\n    const newImageModelStyle = {\r\n      ...imageModelStyle,\r\n      display: \"none\",\r\n    };\r\n    setImageModelStyle(newImageModelStyle);\r\n  };\r\n\r\n  const inputFromFiles = (e) => {\r\n    console.log(e.target);\r\n    const [file] = e.target.files;\r\n    const { name: fileName } = file;\r\n    setFile(file);\r\n    const Name = `${fileName}`;\r\n    setFileName(Name);\r\n  };\r\n\r\n  const inputFromCamera = (e) => {\r\n    console.log(e.target);\r\n    // let v = function () {\r\n    //   let check = false;\r\n    //   (function (a) {\r\n    //     if (\r\n    //       /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n    //         a\r\n    //       ) ||\r\n    //       /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n    //         a.substr(0, 4)\r\n    //       )\r\n    //     )\r\n    //       check = true;\r\n    //   })(navigator.userAgent || navigator.vendor || window.opera);\r\n\r\n    //   console.log(check);\r\n    //   console.log(v);\r\n    // };\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"cardSetter\" style={containerStyle}>\r\n        <div className=\"titleDiv\">\r\n          <span className=\"nameCard\">Generate Card</span>\r\n        </div>\r\n        <div className=\"cardInputType\">\r\n          <div className=\"solidDiv\">\r\n            <button\r\n              className=\"solidColor\"\r\n              name\r\n              onMouseEnter={() => setCardDescText(solidTextLine)}\r\n              onMouseLeave={() => setCardDescText(\"\")}\r\n              onClick={clickHandler}\r\n            >\r\n              Solid\r\n            </button>\r\n          </div>\r\n          <div className=\"imageDiv\">\r\n            <button\r\n              className=\"imageInput\"\r\n              onMouseEnter={() => setCardDescText(imageInputTextLine)}\r\n              onMouseLeave={() => setCardDescText(\"\")}\r\n              onClick={clickHandler}\r\n            >\r\n              Image\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"cardDesc\">\r\n          <span className=\"cardDescText\">{cardDescText}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"modelContainer\" style={modelContainerStyle}>\r\n        <div className=\"imageModelContainer\" style={imageModelStyle}>\r\n          <div className=\"name\">\r\n            <span className=\"modelName\">Image Generator</span>\r\n            <span className=\"closeModelDiv\" onClick={closeModel}>\r\n              x\r\n            </span>\r\n          </div>\r\n          <div className=\"info\">\r\n            <span>Input image from</span>\r\n          </div>\r\n          <div className=\"values\">\r\n            <div className=\"webCamDiv\">\r\n              <button onClick={inputFromCamera}>Camera</button>\r\n            </div>\r\n            <div className=\"importFromFilesDiv\">\r\n              <input\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                id=\"file\"\r\n                className=\"file\"\r\n                onChange={inputFromFiles}\r\n              />\r\n              <label for=\"file\">\r\n                Select file\r\n                <p className=\"file-name\">{fileName}</p>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"submitButtonDiv\">\r\n            <button onClick={submitHandler}>\r\n              <Link className=\"link\" to=\"/workplace\">\r\n                create card\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"modelContainer\"\r\n        id=\"SolidCardModel\"\r\n        style={modelContainerStyle}\r\n      >\r\n        <div className=\"solidModelContainer\" style={solidModelStyle}>\r\n          <div className=\"name\">\r\n            <span className=\"modelName\">Solid Card Generator</span>\r\n            <span className=\"closeModelDiv\" onClick={closeModel}>\r\n              x\r\n            </span>\r\n          </div>\r\n          <div className=\"values\">\r\n            <div className=\"valueQuantity\">\r\n              <div className=\"valueName\">Background Color</div>\r\n              <div className=\"backgroundColorValueQuantity valueInputDiv\">\r\n                <label\r\n                  htmlFor=\"backgroundColorValueInput\"\r\n                  className=\"backgroundColorValueInputLabel valueInputLabel\"\r\n                >\r\n                  Hex Code\r\n                </label>\r\n                <input\r\n                  className=\"valueInput\"\r\n                  type=\"text\"\r\n                  name=\"backgroundColorValueInput\"\r\n                  min=\"3\"\r\n                  max=\"6\"\r\n                  placeholder=\"#\"\r\n                  onChange={ChangeHandler}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"valueQuantity\">\r\n              <div className=\"valueName\">Text Color</div>\r\n              <div className=\"textColorValueQuantity valueInputDiv\">\r\n                <label\r\n                  htmlFor=\"textColorValueInput \"\r\n                  className=\"textColorValueInputLabel valueInputLabel\"\r\n                >\r\n                  Hex Code\r\n                </label>\r\n                <input\r\n                  className=\"valueInput\"\r\n                  type=\"text\"\r\n                  name=\"textColorValueInput\"\r\n                  min=\"3\"\r\n                  max=\"6\"\r\n                  placeholder=\"#\"\r\n                  onChange={ChangeHandler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"valueRepresentation\">\r\n            <div className=\"workingDiv\" style={{ backgroundColor, color }}>\r\n              <span>Text Color</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"submitButtonDiv\">\r\n            <button onClick={submitHandler}>\r\n              <Link className=\"link\" to=\"/workplace\">\r\n                create card\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.scss\";\nimport { useState, useMemo } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Topbar from \"./Components/topbar/Topbar\";\nimport WorkPlace from \"./pages/WorkPlace/WorkPlace\";\nimport CardSetter from \"./pages/CardSetter/CardSetter\";\nimport { CardContext } from \"./Context/Context\";\n\nfunction App() {\n  const [backgroundColor, setBackgroundColor] = useState(\"#ffffff\");\n  const [color, setColor] = useState(\"#000000\");\n  const [file, setFile] = useState(null);\n  const [text, setText] = useState(\"\");\n\n  const providerValue = useMemo(\n    () => ({\n      backgroundColor,\n      color,\n      file,\n      text,\n      setBackgroundColor,\n      setColor,\n      setFile,\n      setText,\n    }),\n    [\n      backgroundColor,\n      color,\n      file,\n      text,\n      setBackgroundColor,\n      setColor,\n      setFile,\n      setText,\n    ]\n  );\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Topbar />\n        <Switch>\n          <CardContext.Provider value={providerValue}>\n            {/* <Route path=\"/\" exact component ={Home}>*/}\n            <Route path=\"/react-card-developer\" component={CardSetter} />\n            <Route path=\"/workplace\" component={WorkPlace} />\n          </CardContext.Provider>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}